{"version":3,"sources":["components/Header.js","components/Init.js","components/Return.js","components/Converter.js","components/ApiUsage.js","App.js","reportWebVitals.js","index.js"],"names":["Header","id","Init","initNum","unitList","onNumChange","onUnitChange","unitOption","map","el","value","onChange","Return","returnNum","returnUnit","readOnly","Converter","ApiUsage","setShowApi","showApi","className","onClick","App","useState","setInitNum","initUnit","setInitUnit","setReturnNum","setReturnUnit","calcConv","a","fetch","response","text","data","startsWith","json","JSON","parse","console","log","useEffect","e","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAQeA,EARA,WACb,OACE,qBAAKC,GAAG,SAAR,SACE,mDCiBSC,EApBF,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,QAASC,EAAyC,EAAzCA,SAASC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAEvCC,EAAaH,EAASI,KAAI,SAAAC,GAC9B,OACE,wBAAQC,MAAOD,EAAf,SAA6BA,GAALA,MAI5B,OACE,gCACA,8BACE,uBAAOC,MAAOP,EAASQ,SAAUN,MAEnC,8BACE,wBAAQM,SAAUL,EAAlB,SAAiCC,UCDxBK,EAbA,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAC3B,OACE,gCACA,8BACE,uBAAOJ,MAAOG,EAAWE,UAAQ,MAEnC,8BACGD,QCcQE,EAlBG,SAAC,GAA4E,IAA1EZ,EAAyE,EAAzEA,SAAUD,EAA+D,EAA/DA,QAASE,EAAsD,EAAtDA,YAAaC,EAAyC,EAAzCA,aAAaO,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAC3E,OACE,sBAAKb,GAAG,OAAR,UACE,cAAC,EAAD,CACEG,SAAUA,EACVD,QAASA,EACTE,YAAaA,EACbC,aAAcA,IAGd,oCACF,cAAC,EAAD,CACEQ,WAAYA,EACZD,UAAWA,QCGJI,EAnBE,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,QAC7B,OACE,sBAAKC,UAAU,MAAf,UACE,8BAAK,oBAAIC,QAAS,kBAAMH,GAAYC,IAASC,UAAU,cAAlD,iCACJD,GAAW,qCACV,2DAAoC,uBACtC,4DAAqC,uBACrC,+DAAwC,uBACxC,yDAAkC,uBAClC,gDACA,qKCiDSG,MArDf,WAAgB,IAAD,EAEmBC,mBAAS,KAF5B,mBAELpB,EAFK,KAEIqB,EAFJ,OAGqBD,mBAAS,MAH9B,mBAGLE,EAHK,KAGKC,EAHL,OAIuBH,mBAAS,KAJhC,mBAILV,EAJK,KAIMc,EAJN,OAKyBJ,mBAAS,MALlC,mBAKLT,EALK,KAKOc,EALP,OAMmBL,oBAAS,GAN5B,mBAMLJ,EANK,KAMID,EANJ,KAUPW,EAAQ,uCAAG,gCAAAC,EAAA,+EAEUC,MAAM,sBAAD,OAAuB5B,GAAvB,OAAiCsB,IAFhD,cAEPO,EAFO,gBAGMA,EAASC,OAHf,QAGPC,EAHO,QAMLC,WAAW,YACXC,EAAOC,KAAKC,MAAMJ,GACxBP,EAAaS,EAAKvB,WAClBe,EAAcQ,EAAKtB,aATR,kDAYbyB,QAAQC,IAAR,MAZa,0DAAH,qDA4Bd,OAZAC,qBAAU,WAERZ,MACA,CAAC1B,EAAQsB,IAUT,sBAAKL,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWjB,QAASA,EAClBC,SAnCW,CAAC,KAAK,KAAK,MAAM,IAAI,MAAM,MAoCtCC,YAZa,SAACqC,GAClBlB,EAAWkB,EAAEC,OAAOjC,QAYhBJ,aAVe,SAACoC,GACpBhB,EAAYgB,EAAEC,OAAOjC,QAUjBG,UAAWA,EACXC,WAAYA,IACd,cAAC,EAAD,CAAUK,QAASA,EACjBD,WAAYA,QC1CL0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.85f510cb.chunk.js","sourcesContent":["const Header = () => {\r\n  return (\r\n    <div id=\"header\">\r\n      <h1>Unit Converter</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","const Init = ({ initNum, unitList,onNumChange, onUnitChange }) => {\r\n\r\n  const unitOption = unitList.map(el => {\r\n    return (\r\n      <option value={el} key={el}>{el}</option>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div>\r\n    <div>\r\n      <input value={initNum} onChange={onNumChange}/>\r\n    </div>\r\n    <div>\r\n      <select onChange={onUnitChange}>{unitOption}</select>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Init\r\n","const Return = ({ returnNum, returnUnit }) => {\r\n  return (\r\n    <div>\r\n    <div>\r\n      <input value={returnNum} readOnly/>\r\n    </div>\r\n    <div>\r\n      {returnUnit}\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Return\r\n","import Init from \"./Init.js\"\r\nimport Return from \"./Return.js\"\r\n\r\nconst Converter = ({ unitList, initNum, onNumChange, onUnitChange,returnNum, returnUnit }) => {\r\n  return (\r\n    <div id=\"conv\">\r\n      <Init \r\n        unitList={unitList} \r\n        initNum={initNum}\r\n        onNumChange={onNumChange}\r\n        onUnitChange={onUnitChange}\r\n\r\n        />\r\n        <div>=</div>\r\n      <Return \r\n        returnUnit={returnUnit}\r\n        returnNum={returnNum}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Converter\r\n","const ApiUsage = ({setShowApi, showApi}) => {\r\n  return (\r\n    <div className=\"api\">\r\n      <div><h3 onClick={() => setShowApi(!showApi)}className=\"api-example\" >Example API usage</h3></div>\r\n      {showApi && <>\r\n        <code>/api/convert?input=4gal</code><br/>\r\n      <code>/api/convert?input=1/2km</code><br/>\r\n      <code>/api/convert?input=5.4/3lbs</code><br/>\r\n      <code>/api/convert?input=kg</code><br/>\r\n      <h4>Example return</h4>\r\n      <code>&#123; initNum: 3.1, initUnit: 'mi', returnNum: 4.98895, returnUnit: 'km', string: '3.1 miles converts to 4.98895 kilometers' &#125;</code>\r\n      </>\r\n      }\r\n      \r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default ApiUsage\r\n","import { useState, useEffect } from \"react\"\nimport './App.css';\nimport Header from \"./components/Header.js\"\nimport Converter from \"./components/Converter.js\"\nimport ApiUsage from \"./components/ApiUsage.js\"\n\nfunction App() {\n\n  const [ initNum, setInitNum ] = useState(\"1\")\n  const [ initUnit, setInitUnit ] = useState(\"mi\")\n  const [ returnNum, setReturnNum ] = useState(\"1\")\n  const [ returnUnit, setReturnUnit ] = useState(\"km\")\n  const [ showApi, setShowApi ] = useState(false)\n  const unitList = [\"mi\",\"km\",\"gal\",\"L\",\"lbs\",\"kg\"]\n\n  // send the api request to conver unit\n  const calcConv = async () => {\n    try {\n      const response = await fetch(`/api/convert?input=${initNum}${initUnit}`)\n      const data = await response.text()\n\n      // silly check to see if response is in right format (don't want to change the API response in case it fails fCC tests)\n      if(data.startsWith(\"{\\\"init\")) {\n        const json = JSON.parse(data)\n        setReturnNum(json.returnNum)\n        setReturnUnit(json.returnUnit)\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    // eslint-disable-line react-hooks/exhaustive-deps\n    calcConv()\n  },[initNum,initUnit])\n\n  const onNumChange= (e) => {\n    setInitNum(e.target.value)\n  }\n  const onUnitChange = (e) => {\n    setInitUnit(e.target.value)\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Converter initNum={initNum} \n        unitList={unitList} \n        onNumChange={onNumChange}\n        onUnitChange={onUnitChange}\n        returnNum={returnNum}\n        returnUnit={returnUnit}/>\n      <ApiUsage showApi={showApi}\n        setShowApi={setShowApi}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}